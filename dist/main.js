(()=>{"use strict";const e=async e=>{const i=await n(e),a=i.response,s=i.response2;let d={name:"",condition:"",temp_c:"",icon:""};d.name=a.name,d.condition=a.weather[0].description,d.temp_c=a.main.temp,d.icon=a.weather[0].icon,t.displayCurrentForecastData(d);let o={time:[],icon:[],temp_c:[]};for(let e=0;e<s.list.length;e++){o.temp_c.push(parseInt(s.list[e].main.temp)),o.icon.push(s.list[e].weather[0].icon);let t=s.list[e].dt_txt.split(/[/ :]/);t[1]+=":00",o.time.push(t[1])}t.display12hForecastData(o);let c={keys:["Feels like","Humidity","Pressure","Temperature","Max temp","Min temp"],values:[]};c.values.push(a.main.feels_like+"°"),c.values.push(a.main.humidity),c.values.push(a.main.pressure),c.values.push(a.main.temp+"°"),c.values.push(a.main.temp_max+"°"),c.values.push(a.main.temp_min+"°"),t.displayDetailedData(c),console.log(c),console.log(a),console.log(s)},t=(document.getElementById("content").innerHTML='\n    <div id="container">\n    <div id="loader-container">\n    <div class="loader"></div>\n    </div>\n      <nav id="nav">\n          <form id="form">\n            <input type="search" id="search" placeholder="Search for cities"/>\n            <button type="submit" ><i class="fa fa-search"></i></button>\n          </form>\n        </nav>\n        <div id="box">\n          <div id="box-1">\n            <div id="loc-con">\n              <h1 id="location"></h1>\n              <p id="condition"></p>\n            </div>\n            <h1 id="temp-c"></h1>\n          </div>\n          <div id="box-2">\n            <img id="icon" />\n          </div>\n        </div>\n        <div id="forecast-12hr">\n          <p>12 hour forecast</p>\n          <div id="forecast-12hr-divbox">\n            <div class="forecast-12hr-div"></div>\n            <div class="forecast-12hr-div"></div>\n            <div class="forecast-12hr-div"></div>\n            <div class="forecast-12hr-div"></div>\n            <div class="forecast-12hr-div"></div>\n          </div>\n        </div>\n        <div id="details">\n          <p>Detailed forecast</p>\n\n          <div class ="details-row">\n           <div class="details-item"></div>\n           <div class="details-item"></div>\n           <div class="details-item"></div>\n          </div>\n          <div class ="details-row">\n           <div class="details-item"></div>\n           <div class="details-item"></div>\n           <div class="details-item"></div>\n           </div>\n        </div>\n      </div>',(()=>{const t=document.getElementById("form"),n=document.getElementById("search");t.addEventListener("submit",(t=>{e(n.value),t.preventDefault()}))})(),{displayCurrentForecastData:e=>{const t=document.getElementById("location"),n=document.getElementById("condition"),i=document.getElementById("temp-c"),a=document.getElementById("icon");t.textContent=e.name,n.textContent=e.condition,i.textContent=parseInt(e.temp_c)+"°",a.src=`https://openweathermap.org/img/wn/${e.icon}@4x.png`},display12hForecastData:e=>{const t=document.querySelectorAll(".forecast-12hr-div");for(let n=0;n<5;n++)t[n].innerHTML=`<p>${e.time[n]}</p><img src="https://openweathermap.org/img/wn/${e.icon[n]}@2x.png"/><p>${e.temp_c[n]}°</p>`},displayDetailedData:e=>{const t=document.querySelectorAll(".details-item");for(let n=0;n<e.keys.length;n++)t[n].innerHTML=`<p>${e.keys[n]}</p>\n      <p>${e.values[n]}</p>`},loadIndicator:e=>{const t=document.getElementById("loader-container");console.log(t),"active"===e?t.classList.add("active"):"done"===e&&t.classList.remove("active")}}),n=async e=>{try{t.loadIndicator("active");const[n,i]=await Promise.all([async function(){const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=8c37a0de3d0f3764695df622cf71fa1e&units=metric`,{mode:"cors"});return await t.json()}(),async function(){const t=await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${e}&appid=8c37a0de3d0f3764695df622cf71fa1e&units=metric`,{mode:"cors"});return await t.json()}()]);return t.loadIndicator("done"),{response:n,response2:i}}catch(e){console.log(e)}e||(e="london")};e("London")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,